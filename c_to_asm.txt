datasg segment
tem db 6,7 dup  (0)
a dw 0
i dw 0
T1 dw 0
T2 dw 0
printf_i7 db 'i:$'
datasg ends
assume cs:codesg,ds:datasg
codesg segment
begin:MOV AX,datasg
MOV DS,AX
L1: mov AX, 10
mov a, AX
L2: mov AX, 0
mov i, AX
L3: mov AX, i
sub AX, a
L4: jnc L11;大于等于则跳转
L6: jnc L9;大于等于则跳转


;PRINTF
L7:
lea dx,printf_i7
mov ah,9
int 21h
mov ax,i
xor cx,cx
mov bx,10
PT07:xor dx,dx
div bx
or dx,0e30h;0e:显示字符
push dx
inc cx
cmp ax,0;ZF=1则AX=0,ZF=0则AX！=0
jnz PT07;相等时跳转
PT17:pop ax
int 10h;显示一个字符
loop PT17
mov ah,0 
;int 16h ;键盘中断
;换行
mov dl,0dh
mov ah,2
int 21h
mov dl,0ah
mov ah,2
int 21h


L8: jmp L9
L9: mov AX, i
add AX, 1
mov i, AX
L10: jmp L3
L11: nop
mov ax,4c00h;(int 21h的4ch号中断，安全退出程序)
int 21h;(调用系统中断)
codesg ends
end begin
